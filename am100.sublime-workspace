{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"F",
				"FALSE"
			],
			[
				"slave",
				"slave_id_notify"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/am100.h",
			"settings":
			{
				"buffer_size": 24875,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					16,
					2,
					"left_delete",
					null,
					"AgAAALRYAAAAAAAAtFgAAAAAAAA2AQAAdm9pZCBkb19mbXRfMSh2b2lkKTsKdm9pZCBkb19mbXRfMih2b2lkKTsKdm9pZCBkb19mbXRfMyh2b2lkKTsKdm9pZCBkb19mbXRfNCh2b2lkKTsKaW50IHN2Y2FfYXNzaXN0KGludCBhcmcpOwppbnQgc3ZjYl9hc3Npc3QoaW50IGFyZyk7CmludCBzdmNjX2Fzc2lzdChpbnQgYXJnKTsKdm9pZCBkb19mbXRfNSh2b2lkKTsKdm9pZCBkb19mbXRfNih2b2lkKTsKdm9pZCBkb19mbXRfNyh2b2lkKTsKdm9pZCBkb19mbXRfOCh2b2lkKTsKdm9pZCBkb19mbXRfOSh2b2lkKTsKdm9pZCBkb19mbXRfMTAodm9pZCk7CnZvaWQgZG9fZm10XzExKHZvaWQpO7NYAAAAAAAAs1gAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAtFgAAAAAAADqWQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"left_delete",
					null,
					"AQAAALNYAAAAAAAAs1gAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAtFgAAAAAAAC0WAAAAAAAAAAAAAAAoHpA"
				]
			]
		},
		{
			"contents": "Searching 67 files for \"do_fmt_1\" (case sensitive)\n\n/media/mike/development/github/am100/libemuwd16/src/cpu-fmt1.c:\n   31      wd11_cpu_state->trace_fmt1(opc, mask);\n   32  \n   33: void do_fmt_1(wd11_cpu_state_t* wd11_cpu_state) {\n   34    unsigned tmp;\n   35    uint16_t mask, oldmask, newop;\n   ..\n  441    } /* end switch(op) */\n  442  \n  443: } /* end function do_fmt_1 */\n  444  \n\n/media/mike/development/github/am100/libemuwd16/src/cpu-fmt1.h:\n   34  #endif\n   35  \n   36: void do_fmt_1(wd11_cpu_state_t* wd11_cpu_state);\n   37  \n   38  #ifdef __cplusplus\n\n/media/mike/development/github/am100/libemuwd16/src/cpu-fmt10.c:\n   31      wd11_cpu_state->trace_fmt10(opc, smode, sreg, dmode, dreg, n1word);\n   32  \n   33: void do_fmt_10(wd11_cpu_state_t* wd11_cpu_state) {\n   34    int op10, smode, sreg, dmode, dreg, itmp;\n   35    uint16_t tmp, tmp2, tmp3, n1word, n2word;\n   ..\n  464    } /* end switch(op10) */\n  465  \n  466: } /* end function do_fmt_10 */\n  467  \n\n/media/mike/development/github/am100/libemuwd16/src/cpu-fmt10.h:\n   34  #endif\n   35  \n   36: void do_fmt_10(wd11_cpu_state_t* wd11_cpu_state);\n   37  \n   38  #ifdef __cplusplus\n\n/media/mike/development/github/am100/libemuwd16/src/cpu-fmt11.c:\n  147  /* Fmt 11 entry for floating point instructions          */\n  148  /*-------------------------------------------------------------------*/\n  149: void do_fmt_11(wd11_cpu_state_t* wd11_cpu_state) {\n  150    int op11, sind, smode, sreg, dind, dmode, dreg, oflg;\n  151    uint16_t saddr, daddr;\n  ...\n  482    wd11_cpu_state->putAMword((unsigned char *)&saddr, 0x38); /* real doesn't def... */\n  483  \n  484: } /* end function do_fmt_11 */\n  485  \n\n/media/mike/development/github/am100/libemuwd16/src/cpu-fmt11.h:\n   34  #endif\n   35  \n   36: void do_fmt_11(wd11_cpu_state_t* wd11_cpu_state);\n   37  \n   38  #ifdef __cplusplus\n\n/media/mike/development/github/am100/libemuwd16/src/wd16.c:\n  115      break;            // do_fmt_invalid if further decode fails\n  116    case 1:\n  117:     do_fmt_1(&wd11_cpu_state);\n  118      break;\n  119    case 2:\n  ...\n  142      break;\n  143    case 10:\n  144:     do_fmt_10(&wd11_cpu_state);\n  145      break;\n  146    case 11:\n  147:     do_fmt_11(&wd11_cpu_state);\n  148      break;\n  149    default:\n\n/media/mike/development/github/am100/src/am100.h:\n  546  /* in cpu-fmt?.c                                                     */\n  547  /*-------------------------------------------------------------------*/\n  548: void do_fmt_1(void);\n  549  void do_fmt_2(void);\n  550  void do_fmt_3(void);\n  ...\n  558  void do_fmt_8(void);\n  559  void do_fmt_9(void);\n  560: void do_fmt_10(void);\n  561: void do_fmt_11(void);\n  562  \n  563  void build_decode(void);\n\n15 matches across 8 files\n\n\nSearching 67 files for \"trace_fmt2\" (case sensitive)\n\n/media/mike/development/github/am100/libemuwd16/src/cpu-fmt2.c:\n   29  #define do_each(opc)                                  \\\n   30    if (wd11_cpu_state->regs.tracing)                   \\\n   31:     wd11_cpu_state->trace_fmt2(opc, reg);\n   32  \n   33  void do_fmt_2(wd11_cpu_state_t* wd11_cpu_state) {\n\n/media/mike/development/github/am100/libemuwd16/src/wd16.h:\n  177  \n  178  // void   trace_fmt1(char *opc, int mask);\n  179: // void   trace_fmt2(char *opc, int reg);\n  180  // void   trace_fmt3(char *opc, int arg);\n  181  // void   trace_fmt4_svca(char *opc, int arg);\n  ...\n  228  \n  229    trace_fmt_A_callback_t          trace_fmt1;\n  230:   trace_fmt_A_callback_t          trace_fmt2;\n  231    trace_fmt_A_callback_t          trace_fmt3;\n  232    trace_fmt_A_callback_t          trace_fmt4_svca;\n\n/media/mike/development/github/am100/src/am100.h:\n  579  void trace_fmtInvalid(void);\n  580  void trace_fmt1(char *opc, int mask);\n  581: void trace_fmt2(char *opc, int reg);\n  582  void trace_fmt3(char *opc, int arg);\n  583  void trace_fmt4_svca(char *opc, int arg);\n\n/media/mike/development/github/am100/src/trace.c:\n  134  }\n  135  \n  136: void trace_fmt2(char *opc, int reg) {\n  137    utcheck;\n  138    trace_pre_regs();\n\n5 matches across 4 files\n",
			"settings":
			{
				"buffer_size": 4054,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "libemuwd16/src/cpu-fmt1.h",
			"settings":
			{
				"buffer_size": 1992,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "libemuwd16/src/cpu-fmt1.c",
			"settings":
			{
				"buffer_size": 22377,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "libemuwd16/src/cpu-fmt5.h",
			"settings":
			{
				"buffer_size": 1992,
				"line_ending": "Windows"
			}
		},
		{
			"file": "libemuwd16/src/wd16.h",
			"settings":
			{
				"buffer_size": 13116,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "src/config.c",
			"settings":
			{
				"buffer_size": 38650,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAADBkAAAAAAAAMWQAAAAAAAAAAAAAMWQAAAAAAAAyZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMGQAAAAAAAAwZAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"reindent",
					null,
					"AQAAADFkAAAAAAAAM2QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMWQAAAAAAAAxZAAAAAAAAAAAAAAAAAAA"
				],
				[
					14,
					2,
					"left_delete",
					null,
					"AgAAADFkAAAAAAAAMWQAAAAAAAACAAAAICAwZAAAAAAAADBkAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAM2QAAAAAAAAzZAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADJkAAAAAAAAM2QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMmQAAAAAAAAyZAAAAAAAAAAAAAAAAAAA"
				],
				[
					19,
					1,
					"reindent",
					null,
					"AQAAADFkAAAAAAAAM2QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMWQAAAAAAAAxZAAAAAAAAAAAAAAAAAAA"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "/*"
					},
					"AgAAADNkAAAAAAAANGQAAAAAAAAAAAAANGQAAAAAAAA1ZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAM2QAAAAAAAAzZAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADVkAAAAAAAANmQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANWQAAAAAAAA1ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "Initialu"
					},
					"CAAAADZkAAAAAAAAN2QAAAAAAAAAAAAAN2QAAAAAAAA4ZAAAAAAAAAAAAAA4ZAAAAAAAADlkAAAAAAAAAAAAADlkAAAAAAAAOmQAAAAAAAAAAAAAOmQAAAAAAAA7ZAAAAAAAAAAAAAA7ZAAAAAAAADxkAAAAAAAAAAAAADxkAAAAAAAAPWQAAAAAAAAAAAAAPWQAAAAAAAA+ZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANmQAAAAAAAA2ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAAD1kAAAAAAAAPWQAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAPmQAAAAAAAA+ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "ize"
					},
					"AwAAAD1kAAAAAAAAPmQAAAAAAAAAAAAAPmQAAAAAAAA/ZAAAAAAAAAAAAAA/ZAAAAAAAAEBkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPWQAAAAAAAA9ZAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " callb"
					},
					"BgAAAEBkAAAAAAAAQWQAAAAAAAAAAAAAQWQAAAAAAABCZAAAAAAAAAAAAABCZAAAAAAAAENkAAAAAAAAAAAAAENkAAAAAAAARGQAAAAAAAAAAAAARGQAAAAAAABFZAAAAAAAAAAAAABFZAAAAAAAAEZkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQGQAAAAAAABAZAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "acks"
					},
					"BAAAAEZkAAAAAAAAR2QAAAAAAAAAAAAAR2QAAAAAAABIZAAAAAAAAAAAAABIZAAAAAAAAElkAAAAAAAAAAAAAElkAAAAAAAASmQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARmQAAAAAAABGZAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " */"
					},
					"AwAAAEpkAAAAAAAAS2QAAAAAAAAAAAAAS2QAAAAAAABMZAAAAAAAAAAAAABMZAAAAAAAAE1kAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASmQAAAAAAABKZAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAE1kAAAAAAAATmQAAAAAAAAAAAAATmQAAAAAAABQZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATWQAAAAAAABNZAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "config_i"
					},
					"CAAAAFBkAAAAAAAAUWQAAAAAAAAAAAAAUWQAAAAAAABSZAAAAAAAAAAAAABSZAAAAAAAAFNkAAAAAAAAAAAAAFNkAAAAAAAAVGQAAAAAAAAAAAAAVGQAAAAAAABVZAAAAAAAAAAAAABVZAAAAAAAAFZkAAAAAAAAAAAAAFZkAAAAAAAAV2QAAAAAAAAAAAAAV2QAAAAAAABYZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUGQAAAAAAABQZAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "nitialize_c"
					},
					"CwAAAFhkAAAAAAAAWWQAAAAAAAAAAAAAWWQAAAAAAABaZAAAAAAAAAAAAABaZAAAAAAAAFtkAAAAAAAAAAAAAFtkAAAAAAAAXGQAAAAAAAAAAAAAXGQAAAAAAABdZAAAAAAAAAAAAABdZAAAAAAAAF5kAAAAAAAAAAAAAF5kAAAAAAAAX2QAAAAAAAAAAAAAX2QAAAAAAABgZAAAAAAAAAAAAABgZAAAAAAAAGFkAAAAAAAAAAAAAGFkAAAAAAAAYmQAAAAAAAAAAAAAYmQAAAAAAABjZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWGQAAAAAAABYZAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "allbacks"
					},
					"CAAAAGNkAAAAAAAAZGQAAAAAAAAAAAAAZGQAAAAAAABlZAAAAAAAAAAAAABlZAAAAAAAAGZkAAAAAAAAAAAAAGZkAAAAAAAAZ2QAAAAAAAAAAAAAZ2QAAAAAAABoZAAAAAAAAAAAAABoZAAAAAAAAGlkAAAAAAAAAAAAAGlkAAAAAAAAamQAAAAAAAAAAAAAamQAAAAAAABrZAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAY2QAAAAAAABjZAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGtkAAAAAAAAbWQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAa2QAAAAAAABrZAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAG1kAAAAAAAAb2QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbWQAAAAAAABtZAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAG5kAAAAAAAAb2QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbmQAAAAAAABuZAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"left_delete",
					null,
					"AQAAAG5kAAAAAAAAbmQAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAb2QAAAAAAABvZAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAG1kAAAAAAAAbWQAAAAAAAABAAAAJ21kAAAAAAAAbWQAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAbmQAAAAAAABuZAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAG1kAAAAAAAAbmQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbWQAAAAAAABtZAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					7,
					"left_delete",
					null,
					"BwAAAFZkAAAAAAAAVmQAAAAAAAABAAAAX1VkAAAAAAAAVWQAAAAAAAABAAAAZ1RkAAAAAAAAVGQAAAAAAAABAAAAaVNkAAAAAAAAU2QAAAAAAAABAAAAZlJkAAAAAAAAUmQAAAAAAAABAAAAblFkAAAAAAAAUWQAAAAAAAABAAAAb1BkAAAAAAAAUGQAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAV2QAAAAAAABXZAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "cpu_"
					},
					"BAAAAFtkAAAAAAAAXGQAAAAAAAAAAAAAXGQAAAAAAABdZAAAAAAAAAAAAABdZAAAAAAAAF5kAAAAAAAAAAAAAF5kAAAAAAAAX2QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAW2QAAAAAAABbZAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					2,
					"left_delete",
					null,
					"AgAAAFxkAAAAAAAAXGQAAAAAAAACAAAAcHVbZAAAAAAAAFtkAAAAAAAAAQAAAGM",
					"AQAAAAAAAAABAAAAXGQAAAAAAABeZAAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAFtkAAAAAAAAXGQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAW2QAAAAAAABbZAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"left_delete",
					null,
					"AQAAAFtkAAAAAAAAW2QAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAXGQAAAAAAABcZAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "wd16"
					},
					"BAAAAFtkAAAAAAAAXGQAAAAAAAAAAAAAXGQAAAAAAABdZAAAAAAAAAAAAABdZAAAAAAAAF5kAAAAAAAAAAAAAF5kAAAAAAAAX2QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAW2QAAAAAAABbZAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAADAJAAAAAAAAMQkAAAAAAAAAAAAAMQkAAAAAAAAyCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAkAAAAAAAAwCQAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "static"
					},
					"BgAAADEJAAAAAAAAMgkAAAAAAAAAAAAAMgkAAAAAAAAzCQAAAAAAAAAAAAAzCQAAAAAAADQJAAAAAAAAAAAAADQJAAAAAAAANQkAAAAAAAAAAAAANQkAAAAAAAA2CQAAAAAAAAAAAAA2CQAAAAAAADcJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQkAAAAAAAAxCQAAAAAAAAAAAAAAAAAA"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " void"
					},
					"BQAAADcJAAAAAAAAOAkAAAAAAAAAAAAAOAkAAAAAAAA5CQAAAAAAAAAAAAA5CQAAAAAAADoJAAAAAAAAAAAAADoJAAAAAAAAOwkAAAAAAAAAAAAAOwkAAAAAAAA8CQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwkAAAAAAAA3CQAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADwJAAAAAAAAPQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAkAAAAAAAA8CQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"paste_and_indent",
					null,
					"AQAAAD0JAAAAAAAAXAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQkAAAAAAAA9CQAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "void"
					},
					"BAAAAFkJAAAAAAAAWgkAAAAAAAAAAAAAWgkAAAAAAABbCQAAAAAAAAAAAABbCQAAAAAAAFwJAAAAAAAAAAAAAFwJAAAAAAAAXQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQkAAAAAAABZCQAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					2,
					"left_delete",
					null,
					"AgAAAD4JAAAAAAAAPgkAAAAAAAABAAAAID0JAAAAAAAAPQkAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAPwkAAAAAAAA/CQAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAF4JAAAAAAAAXwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgkAAAAAAABeCQAAAAAAAAAAAAAAAFJA"
				],
				[
					80,
					1,
					"paste",
					null,
					"AQAAAF8JAAAAAAAAfgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwkAAAAAAABfCQAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": "void"
					},
					"BAAAAF8JAAAAAAAAYAkAAAAAAAAAAAAAYAkAAAAAAABhCQAAAAAAAAAAAABhCQAAAAAAAGIJAAAAAAAAAAAAAGIJAAAAAAAAYwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXwkAAAAAAABfCQAAAAAAAAAAAAAAAAAA"
				],
				[
					84,
					1,
					"left_delete",
					null,
					"AQAAAGQJAAAAAAAAZAkAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAZQkAAAAAAABlCQAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"left_delete",
					null,
					"AQAAAH8JAAAAAAAAfwkAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAgAkAAAAAAACACQAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAH8JAAAAAAAAgAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwkAAAAAAAB/CQAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAIAJAAAAAAAAggkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAkAAAAAAACACQAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAIEJAAAAAAAAggkAAAAAAAAAAAAAggkAAAAAAACDCQAAAAAAAAAAAACCCQAAAAAAAIQJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQkAAAAAAACBCQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "fprintf"
					},
					"BwAAAIQJAAAAAAAAhQkAAAAAAAAAAAAAhQkAAAAAAACGCQAAAAAAAAAAAACGCQAAAAAAAIcJAAAAAAAAAAAAAIcJAAAAAAAAiAkAAAAAAAAAAAAAiAkAAAAAAACJCQAAAAAAAAAAAACJCQAAAAAAAIoJAAAAAAAAAAAAAIoJAAAAAAAAiwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAkAAAAAAACECQAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIsJAAAAAAAAjQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwkAAAAAAACLCQAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIwJAAAAAAAAjQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAkAAAAAAACMCQAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAI0JAAAAAAAAjwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQkAAAAAAACNCQAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "initialize"
					},
					"CgAAAI4JAAAAAAAAjwkAAAAAAAAAAAAAjwkAAAAAAACQCQAAAAAAAAAAAACQCQAAAAAAAJEJAAAAAAAAAAAAAJEJAAAAAAAAkgkAAAAAAAAAAAAAkgkAAAAAAACTCQAAAAAAAAAAAACTCQAAAAAAAJQJAAAAAAAAAAAAAJQJAAAAAAAAlQkAAAAAAAAAAAAAlQkAAAAAAACWCQAAAAAAAAAAAACWCQAAAAAAAJcJAAAAAAAAAAAAAJcJAAAAAAAAmAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgkAAAAAAACOCQAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " wd16"
					},
					"BQAAAJgJAAAAAAAAmQkAAAAAAAAAAAAAmQkAAAAAAACaCQAAAAAAAAAAAACaCQAAAAAAAJsJAAAAAAAAAAAAAJsJAAAAAAAAnAkAAAAAAAAAAAAAnAkAAAAAAACdCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAkAAAAAAACYCQAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": " callbacks"
					},
					"CgAAAJ0JAAAAAAAAngkAAAAAAAAAAAAAngkAAAAAAACfCQAAAAAAAAAAAACfCQAAAAAAAKAJAAAAAAAAAAAAAKAJAAAAAAAAoQkAAAAAAAAAAAAAoQkAAAAAAACiCQAAAAAAAAAAAACiCQAAAAAAAKMJAAAAAAAAAAAAAKMJAAAAAAAApAkAAAAAAAAAAAAApAkAAAAAAAClCQAAAAAAAAAAAAClCQAAAAAAAKYJAAAAAAAAAAAAAKYJAAAAAAAApwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQkAAAAAAACdCQAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " here\\n"
					},
					"BwAAAKcJAAAAAAAAqAkAAAAAAAAAAAAAqAkAAAAAAACpCQAAAAAAAAAAAACpCQAAAAAAAKoJAAAAAAAAAAAAAKoJAAAAAAAAqwkAAAAAAAAAAAAAqwkAAAAAAACsCQAAAAAAAAAAAACsCQAAAAAAAK0JAAAAAAAAAAAAAK0JAAAAAAAArgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwkAAAAAAACnCQAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK8JAAAAAAAAsAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwkAAAAAAACvCQAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALEJAAAAAAAAsgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQkAAAAAAACxCQAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "\nfor"
					},
					"BQAAALIJAAAAAAAAswkAAAAAAAAAAAAAswkAAAAAAAC1CQAAAAAAAAAAAAC1CQAAAAAAALYJAAAAAAAAAAAAALYJAAAAAAAAtwkAAAAAAAAAAAAAtwkAAAAAAAC4CQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgkAAAAAAACyCQAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALgJAAAAAAAAugkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAkAAAAAAAC4CQAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": ";;"
					},
					"AgAAALkJAAAAAAAAugkAAAAAAAAAAAAAugkAAAAAAAC7CQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQkAAAAAAAC5CQAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALwJAAAAAAAAvQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAkAAAAAAAC8CQAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "FIXME"
					},
					"BQAAAI4JAAAAAAAAjwkAAAAAAAAAAAAAjwkAAAAAAACQCQAAAAAAAAAAAACQCQAAAAAAAJEJAAAAAAAAAAAAAJEJAAAAAAAAkgkAAAAAAAAAAAAAkgkAAAAAAACTCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgkAAAAAAACOCQAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJMJAAAAAAAAlAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwkAAAAAAACTCQAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "\n/*"
					},
					"BAAAAIEJAAAAAAAAggkAAAAAAAAAAAAAggkAAAAAAACECQAAAAAAAAAAAACECQAAAAAAAIUJAAAAAAAAAAAAAIUJAAAAAAAAhgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQkAAAAAAACBCQAAAAAAAAAAAAAAAFtA"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " FIXME"
					},
					"BgAAAIYJAAAAAAAAhwkAAAAAAAAAAAAAhwkAAAAAAACICQAAAAAAAAAAAACICQAAAAAAAIkJAAAAAAAAAAAAAIkJAAAAAAAAigkAAAAAAAAAAAAAigkAAAAAAACLCQAAAAAAAAAAAACLCQAAAAAAAIwJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgkAAAAAAACGCQAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": " */"
					},
					"AwAAAIwJAAAAAAAAjQkAAAAAAAAAAAAAjQkAAAAAAACOCQAAAAAAAAAAAACOCQAAAAAAAI8JAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAkAAAAAAACMCQAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "@"
					},
					"AQAAAIcJAAAAAAAAiAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwkAAAAAAACHCQAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAIYJAAAAAAAAhwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgkAAAAAAACGCQAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAANYJAAAAAAAA1gkAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA1wkAAAAAAADXCQAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"package",
				"Package Control: List Packages"
			],
			[
				"terminus",
				"Preferences: Terminus Settings"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"mark",
				"Set Syntax: Markdown"
			],
			[
				"sublimegdb",
				"Preferences: SublimeGDB Settings – User"
			],
			[
				"termin",
				"Preferences: Terminus Settings"
			],
			[
				"term",
				"Terminus: Toggle Panel"
			],
			[
				"terminal",
				"Preferences: Terminal Key Bindings – Default"
			],
			[
				"install paackage ",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pack",
				"View Package File"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 56.0,
		"history":
		[
			"exit()",
			"bye()",
			"system()",
			"exit",
			"quit"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/media/mike/development/github/am100",
		"/media/mike/development/github/am100/libemuwd16",
		"/media/mike/development/github/am100/libemuwd16/src",
		"/media/mike/development/github/am100/src"
	],
	"file_history":
	[
		"/media/mike/development/github/am100/src/makefile",
		"/media/mike/development/github/am100/src/config.c",
		"/media/mike/development/github/am100/libemuwd16/src/instruction-type-gen.c",
		"/home/mike/Music/data/dekstop-mcc-ngr-util-debug.txt",
		"/media/mike/development/github/libemuwd16/LICENSE",
		"/run/user/1000/gvfs/sftp:host=micro/home/mike/Music/loop.sh",
		"/media/mike/development/bitbucket/am100uc/src/am100/am100.h",
		"/media/mike/development/bitbucket/am100uc/src/am100/hwassist.c",
		"/media/mike/development/bitbucket/am100uc/src/am100/cpu.c",
		"/media/mike/development/bitbucket/am100uc/src/am100/config.c",
		"/media/mike/development/bitbucket/am100uc/src/am100/priority.c",
		"/media/mike/development/bitbucket/am100uc/src/am100/trace.c",
		"/media/mike/development/bitbucket/am100uc/src/am100/am-ddb.h",
		"/media/mike/development/bitbucket/am100uc/src/am100/makefile",
		"/media/mike/development/bitbucket/am100uc/src/am100/license.html",
		"/media/mike/development/bitbucket/am100uc/src/am100/alex.pdf",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/sonic1/hw_clocks.c",
		"/media/mike/development/bitbucket/sonic-src/_feature/_bsp/sonic1/_feature.mk",
		"/media/mike/development/bitbucket/sonic-src/_src/util/average.c",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Include/gd32vf103_adc.h",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/sonic1/hw_adc.c",
		"/media/mike/development/bitbucket/sonic-src/_src/vpwr/vpwr.h",
		"/media/mike/development/bitbucket/sonic-src/_src/vpwr/vpwr.c",
		"/media/mike/development/bitbucket/sonic-src/_src/vpwr/_src.mk",
		"/media/mike/development/bitbucket/sonic-src/_feature/xduc/piezo/tx-pid/_feature.mk",
		"/media/mike/development/bitbucket/sonic-src/_src/vref/_src.mk",
		"/media/mike/development/bitbucket/sonic-src/_src/vref/vref.c",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Source/gd32vf103_adc.c",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/longan-nano/hw_adc.c",
		"/media/mike/development/bitbucket/sonic-src/_src/util/pid.c",
		"/media/mike/development/bitbucket/sonic-src/_src/util/pid.h",
		"/media/mike/development/bitbucket/sonic-src/_src/syslog/syslog.h",
		"/media/mike/development/bitbucket/sonic-src/_src/delay/delay.c",
		"/media/mike/development/bitbucket/sonic-src/_src/delay/delay.h",
		"/media/mike/development/bitbucket/sonic-src/_feature/_bsp/sonic1/environment",
		"/media/mike/development/bitbucket/sonic-src/_feature/_common/_bsp.mk",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/recipies/src/delay/delay.h",
		"/media/mike/development/bitbucket/sonic-src/_src/util/flip.h",
		"/media/mike/development/bitbucket/sonic-src/_src/util/linearmap.h",
		"/media/mike/development/bitbucket/sonic-src/_src/util/average.h",
		"/media/mike/development/bitbucket/sonic-src/_feature/_main/sonic-1c/tof-run.h",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/recipies/src/heat/heat.c",
		"/media/mike/development/bitbucket/sonic-src/_src/delay/jiffies.h",
		"/media/mike/development/bitbucket/sonic-src/gdb/sonic1/gdbinit",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/sonic1/hw_dac.h",
		"/media/mike/development/bitbucket/sonic-src/_src/xprintf/xprintf.h",
		"/media/mike/development/bitbucket/sonic-src/_src/xprintf/xprintf.c",
		"/media/mike/development/bitbucket/sonic-src/_feature/xduc/piezo/tx/main.c",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/sonic1/hw_adc.h",
		"/media/mike/development/bitbucket/sonic-src/_src/util/linearmap.c",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/caribou/include/caribou/lib/stdarg.h",
		"/media/mike/development/bitbucket/sonic-src/_feature/xduc/piezo/tx/_feature.mk",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Include/gd32vf103_dma.h",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Source/gd32vf103_dma.c",
		"/home/mike/development/src/GD32VF103_Firmware_Library_V1.0.2/Examples/ADC/ADC0_ADC1_regular_parallel/main.c",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/sonic1/hw_pin.c",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/gd32vf103.h",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Source/gd32vf103_gpio.c",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Source/gd32vf103_dac.c",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Include/gd32vf103_dac.h",
		"/media/mike/development/bitbucket/sonic-src/_src/util/_src.mk",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Include/gd32vf103_rcu.h",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Include/gd32vf103_timer.h",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Source/gd32vf103_timer.c",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Source/gd32vf103_rcu.c",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/longan-nano/hw_clocks.c",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/sonic1/hw_tim.c",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/sonic1/hw_tim.h",
		"/media/mike/development/bitbucket/sonic-src/_feature/adc/main.c",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/sonic1/_src.mk",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/sonic1/hw_dma.h",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/sonic1/hw_dma.c",
		"/media/mike/development/bitbucket/sonic-src/_feature/adc/_feature.mk",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/sonic1/board.h",
		"/media/mike/development/bitbucket/sonic-src/_src/freemodbus/demo/ATSAM3S/board/board.h",
		"/media/mike/development/bitbucket/sonic-src/_feature/timer/tx/main.c",
		"/media/mike/development/bitbucket/sonic-src/_feature/timer/tx/_feature.mk",
		"/media/mike/development/bitbucket/sonic-src/_feature/dac/sine-slow/_feature.mk",
		"/media/mike/development/bitbucket/sonic-src/_feature/dac/sine-slow/main.c",
		"/media/mike/development/bitbucket/sonic-src/_feature/dac/sine/main.c",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/sonic1/hw_pin.h",
		"/media/mike/development/bitbucket/sonic-src/TODO.md",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/sonic1/board.c",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/sonic1/hw_gpio.h",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/sonic1/hw_gpio.c",
		"/media/mike/development/bitbucket/sonic-src/_feature/timer/tx/longan-nano.elf",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/longan-nano/hw_gpio.c",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Include/gd32vf103_gpio.h",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/caribou/include/caribou/kernel/isr.h",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/caribou/src/kernel/isr.c",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/recipies/src/caribou/_src.mk",
		"/media/mike/development/bitbucket/sonic-src/gdb/sonic-1/gdbinit",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou/_src.mk",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/caribou/include/caribou/kernel/thread.h",
		"/home/mike/development/bitbucket/sonic-src/_src/caribou-rtos/caribou/include/caribou/kernel/thread.h",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/board/nucleo_f053/include/cwifi.h",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/board/nucleo_f091/include/cwifi.h",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/caribou/src/kernel/thread.c",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/board/nucleo_f030/include/cwifi.h",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/board/discovery_f0/include/cwifi.h",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/caribou++/include/caribou++/cthread.h",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/stm32/stm32l475/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/stm32/stm32l431/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/stm32/stm32l152/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/stm32/stm32l053/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/stm32/stm32f746/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/stm32/stm32f446/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/stm32/stm32f407/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/stm32/stm32f405/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/stm32/stm32f303/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/stm32/stm32f107/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/stm32/stm32f103/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/stm32/stm32f102/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/stm32/stm32f091/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/stm32/stm32f051/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/stm32/stm32f050/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/stm32/stm32f030/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/stellaris/lm3s8962/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/nxp/lpc2468/src/vic_irq.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/nxp/lpc2468/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/nxp/lpc2103/src/vic_irq.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/nxp/lpc2103/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/target/chip/gd32/gd32vf103/src/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/recipies/src/bsp/sipeed-longan-nano/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/recipies/src/bsp/pa2500/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/recipies/src/bsp/open7xxi/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/caribou-rtos/recipies/src/bsp/nucleo-f091/vectors.S",
		"/media/mike/development/bitbucket/sonic-src/_src/_bsp/sonic-1c-loader/vectors.S"
	],
	"find":
	{
		"height": 22.0
	},
	"find_in_files":
	{
		"height": 98.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"trace_fmt2",
			"do_fmt_1",
			"build_decode",
			"am100"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "/media/mike/development/github/am100"
		}
	],
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/am100.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24875,
						"regions":
						{
						},
						"selection":
						[
							[
								23995,
								24005
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6258.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4054,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										186,
										194
									],
									[
										365,
										373
									],
									[
										484,
										492
									],
									[
										727,
										735
									],
									[
										948,
										956
									],
									[
										1069,
										1077
									],
									[
										1372,
										1380
									],
									[
										1645,
										1653
									],
									[
										1766,
										1774
									],
									[
										2005,
										2013
									],
									[
										2120,
										2128
									],
									[
										2195,
										2203
									],
									[
										2480,
										2488
									],
									[
										2626,
										2634
									],
									[
										2655,
										2663
									],
									[
										3012,
										3022
									],
									[
										3235,
										3245
									],
									[
										3478,
										3488
									],
									[
										3745,
										3755
									],
									[
										3950,
										3960
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								2741,
								2741
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1183.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "libemuwd16/src/cpu-fmt1.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1992,
						"regions":
						{
						},
						"selection":
						[
							[
								1918,
								1918
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "libemuwd16/src/cpu-fmt1.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22377,
						"regions":
						{
						},
						"selection":
						[
							[
								2053,
								2053
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 351.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "libemuwd16/src/cpu-fmt5.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1992,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "libemuwd16/src/wd16.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13116,
						"regions":
						{
						},
						"selection":
						[
							[
								12616,
								12632
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2418.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/config.c",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38650,
						"regions":
						{
						},
						"selection":
						[
							[
								3324,
								3324
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.Terminus":
	{
		"height": 375.0
	},
	"output.exec":
	{
		"height": 237.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Makefile/Make.sublime-build",
	"project": "",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"hw_clock",
				"_src/_bsp/sonic1/hw_clocks.c"
			],
			[
				"hw_adc.h",
				"_src/_bsp/sonic1/hw_adc.h"
			],
			[
				"bsp/feature",
				"_feature/_bsp/sonic1/_feature.mk"
			],
			[
				"average",
				"_src/util/average.h"
			],
			[
				"hw_adc",
				"_src/_bsp/sonic1/hw_adc.c"
			],
			[
				"",
				"_feature/_bsp/sonic1/_feature.mk"
			],
			[
				"sonic/feature",
				"_feature/_bsp/sonic1/_feature.mk"
			],
			[
				"hw_adc.",
				"_src/_bsp/sonic1/hw_adc.c"
			],
			[
				"gd32adc",
				"_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Include/gd32vf103_adc.h"
			],
			[
				"delay.h",
				"_src/caribou-rtos/recipies/src/delay/delay.h"
			],
			[
				"pid",
				"_src/util/pid.h"
			],
			[
				"gd32vf103_adc.c",
				"_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Source/gd32vf103_adc.c"
			],
			[
				"hw_pin",
				"_src/_bsp/sonic1/hw_pin.c"
			],
			[
				"gd32vf103_dma.c",
				"_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Source/gd32vf103_dma.c"
			],
			[
				"gd32vf103_dma",
				"_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Include/gd32vf103_dma.h"
			],
			[
				"gd32vf103_dac.h",
				"_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Include/gd32vf103_dac.h"
			],
			[
				"gd32vf103_",
				"_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Source/gd32vf103_dac.c"
			],
			[
				"gd32vf103_adc.h",
				"_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Include/gd32vf103_adc.h"
			],
			[
				"board.h",
				"_src/_bsp/sonic1/board.h"
			],
			[
				"gdb",
				"gdb/sonic1/gdbinit"
			],
			[
				"tx/main",
				"_feature/timer/tx/main.c"
			],
			[
				"board",
				"_src/_bsp/sonic1/board.c"
			],
			[
				"caribou/_src.mk",
				"_src/caribou/_src.mk"
			],
			[
				"thread.c",
				"_src/caribou-rtos/caribou/src/kernel/thread.c"
			],
			[
				"stack.c",
				"_src/caribou-rtos/caribou/src/kernel/stack.c"
			],
			[
				"stack.h",
				"_src/caribou-rtos/caribou/include/caribou/kernel/stack.h"
			],
			[
				"chip.h",
				"_src/caribou-rtos/target/chip/stm32/stm32f746/include/stm32f746bgt6/chip/chip.h"
			],
			[
				"gtimer",
				"_src/caribou-rtos/target/chip/gd32/gd32vf103/lib/GD32VF103_standard_peripheral/Include/gd32vf103_timer.h"
			],
			[
				"xprintf",
				"_src/xprintf/xprintf.c"
			],
			[
				"hw_pin.c",
				"_src/_bsp/longan-nano/hw_pin.c"
			],
			[
				"hw_dac.c",
				"_src/_bsp/longan-nano/hw_dac.c"
			],
			[
				"modbus/main",
				"_feature/modbus/tcp/slave/main.c"
			],
			[
				"modbus/main.c",
				"_feature/modbus/tcp/slave/main.c"
			],
			[
				"modbusport",
				"_src/_bsp/longan-nano/modbus/port/port.c"
			],
			[
				"mb.c",
				"_src/freemodbus/modbus/mb.c"
			],
			[
				"rx_fw_settings.",
				"Linux/tools/rx_fw_util/rx_fw_settings.c"
			],
			[
				"fw_utilopt",
				"Linux/tools/common/fw_utils_opt_lookup.c"
			],
			[
				"porttime",
				"_src/_bsp/longan-nano/modbus/port/porttimer.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 259.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
